{"ast":null,"code":"var _jsxFileName = \"/Users/adan/Downloads/01-starting-setup/src/components/Expenses/Expense.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"../Expenses/ExpensesChart\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Expense(_ref) {\n  _s();\n\n  let {\n    expenses\n  } = _ref;\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const filteredExpenses = expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredChangeHandler = eventTragetValue => {\n    setFilteredYear(eventTragetValue);\n  }; // let contentExpenses = <p style={{ color: \"#fff\" }}>no expenses found</p>;\n  // if (filteredExpenses.length > 0) {\n  //   contentExpenses = filteredExpenses.map((expense) => (\n  //     <ExpenseItems\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //       key={expense.id}\n  //     />\n  //   ));\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expense\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFiltered: filteredChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n        expenses: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Expense, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"names":["useState","ExpenseList","ExpensesFilter","ExpensesChart","Card","Expense","expenses","filteredYear","setFilteredYear","filteredExpenses","filter","expense","date","getFullYear","toString","filteredChangeHandler","eventTragetValue"],"sources":["/Users/adan/Downloads/01-starting-setup/src/components/Expenses/Expense.js"],"sourcesContent":["import { useState } from \"react\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"../Expenses/ExpensesChart\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\n\nfunction Expense({ expenses }) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filteredExpenses = expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredChangeHandler = (eventTragetValue) => {\n    setFilteredYear(eventTragetValue);\n  };\n\n  // let contentExpenses = <p style={{ color: \"#fff\" }}>no expenses found</p>;\n\n  // if (filteredExpenses.length > 0) {\n  //   contentExpenses = filteredExpenses.map((expense) => (\n  //     <ExpenseItems\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //       key={expense.id}\n  //     />\n  //   ));\n  // }\n\n  return (\n    <>\n      <Card className='expense'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFiltered={filteredChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpenseList expenses={filteredExpenses} />\n        {/* {filteredExpenses.length === 0 && (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        )}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))} */}\n\n        {/* {filteredExpenses.length === 0 ? (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))\n        )} */}\n\n        {/* {filteredExpenses.map((expense) => (\n          <ExpenseItems\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            key={expense.id}\n          />\n        ))} */}\n      </Card>\n    </>\n  );\n}\n\nexport default Expense;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;;AAEA,SAASC,OAAT,OAA+B;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,MAAD,CAAhD;EAEA,MAAMS,gBAAgB,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,OAAD,IAAa;IACpD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CP,YAAjD;EACD,CAFwB,CAAzB;;EAIA,MAAMQ,qBAAqB,GAAIC,gBAAD,IAAsB;IAClDR,eAAe,CAACQ,gBAAD,CAAf;EACD,CAFD,CAP6B,CAW7B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,SAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAET,YADZ;QAEE,gBAAgB,EAAEQ;MAFpB;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,aAAD;QAAe,QAAQ,EAAEN;MAAzB;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,WAAD;QAAa,QAAQ,EAAEA;MAAvB;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA8CD;;GAtEQJ,O;;KAAAA,O;AAwET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}