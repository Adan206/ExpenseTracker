{"ast":null,"code":"import _slicedToArray from\"/Users/adan/Downloads/MaxReact/ExpenseTracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import ExpenseList from\"./ExpenseList\";import ExpensesFilter from\"./ExpensesFilter\";import ExpensesChart from\"../Expenses/ExpensesChart\";import\"./Expense.css\";import Card from\"../UI/Card\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Expense(_ref){var expenses=_ref.expenses;var _useState=useState(\"2021\"),_useState2=_slicedToArray(_useState,2),filteredYear=_useState2[0],setFilteredYear=_useState2[1];var filteredExpenses=expenses.filter(function(expense){return expense.date.getFullYear().toString()===filteredYear;});var filteredChangeHandler=function filteredChangeHandler(eventTragetValue){setFilteredYear(eventTragetValue);};// let contentExpenses = <p style={{ color: \"#fff\" }}>no expenses found</p>;\n// if (filteredExpenses.length > 0) {\n//   contentExpenses = filteredExpenses.map((expense) => (\n//     <ExpenseItems\n//       title={expense.title}\n//       amount={expense.amount}\n//       date={expense.date}\n//       key={expense.id}\n//     />\n//   ));\n// }\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Card,{className:\"expense\",children:[/*#__PURE__*/_jsx(ExpensesFilter,{selected:filteredYear,onChangeFiltered:filteredChangeHandler}),/*#__PURE__*/_jsx(ExpensesChart,{expenses:filteredExpenses}),/*#__PURE__*/_jsx(ExpenseList,{expenses:filteredExpenses})]})});}export default Expense;","map":{"version":3,"names":["useState","ExpenseList","ExpensesFilter","ExpensesChart","Card","Expense","expenses","filteredYear","setFilteredYear","filteredExpenses","filter","expense","date","getFullYear","toString","filteredChangeHandler","eventTragetValue"],"sources":["/Users/adan/Downloads/MaxReact/ExpenseTracker/src/components/Expenses/Expense.js"],"sourcesContent":["import { useState } from \"react\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"../Expenses/ExpensesChart\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\n\nfunction Expense({ expenses }) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filteredExpenses = expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredChangeHandler = (eventTragetValue) => {\n    setFilteredYear(eventTragetValue);\n  };\n\n  // let contentExpenses = <p style={{ color: \"#fff\" }}>no expenses found</p>;\n\n  // if (filteredExpenses.length > 0) {\n  //   contentExpenses = filteredExpenses.map((expense) => (\n  //     <ExpenseItems\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //       key={expense.id}\n  //     />\n  //   ));\n  // }\n\n  return (\n    <>\n      <Card className='expense'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFiltered={filteredChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpenseList expenses={filteredExpenses} />\n        {/* {filteredExpenses.length === 0 && (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        )}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))} */}\n\n        {/* {filteredExpenses.length === 0 ? (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))\n        )} */}\n\n        {/* {filteredExpenses.map((expense) => (\n          <ExpenseItems\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            key={expense.id}\n          />\n        ))} */}\n      </Card>\n    </>\n  );\n}\n\nexport default Expense;\n"],"mappings":"mIAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAOC,eAAP,KAA2B,kBAA3B,CACA,MAAOC,cAAP,KAA0B,2BAA1B,CACA,MAAO,eAAP,CACA,MAAOC,KAAP,KAAiB,YAAjB,C,6IAEA,QAASC,QAAT,MAA+B,IAAZC,SAAY,MAAZA,QAAY,CAC7B,cAAwCN,QAAQ,CAAC,MAAD,CAAhD,wCAAOO,YAAP,eAAqBC,eAArB,eAEA,GAAMC,iBAAgB,CAAGH,QAAQ,CAACI,MAAT,CAAgB,SAACC,OAAD,CAAa,CACpD,MAAOA,QAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,KAA0CP,YAAjD,CACD,CAFwB,CAAzB,CAIA,GAAMQ,sBAAqB,CAAG,QAAxBA,sBAAwB,CAACC,gBAAD,CAAsB,CAClDR,eAAe,CAACQ,gBAAD,CAAf,CACD,CAFD,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,sCACE,MAAC,IAAD,EAAM,SAAS,CAAC,SAAhB,wBACE,KAAC,cAAD,EACE,QAAQ,CAAET,YADZ,CAEE,gBAAgB,CAAEQ,qBAFpB,EADF,cAKE,KAAC,aAAD,EAAe,QAAQ,CAAEN,gBAAzB,EALF,cAME,KAAC,WAAD,EAAa,QAAQ,CAAEA,gBAAvB,EANF,GADF,EADF,CA8CD,CAED,cAAeJ,QAAf"},"metadata":{},"sourceType":"module"}