{"ast":null,"code":"var _jsxFileName = \"/Users/adan/Downloads/01-starting-setup/src/components/Expenses/Expense.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ExpenseItems from \"../Expenses/ExpenseItems\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Expense(_ref) {\n  _s();\n\n  let {\n    expenses\n  } = _ref;\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const filteredExpenses = expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredChangeHandler = eventTragetValue => {\n    setFilteredYear(eventTragetValue);\n  };\n\n  let contentExpenses = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"#fff\"\n    },\n    children: \"no expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses > 0) {\n    contentExpenses = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItems, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expense\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFiltered: filteredChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), contentExpenses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Expense, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"names":["useState","ExpenseItems","ExpensesFilter","Card","Expense","expenses","filteredYear","setFilteredYear","filteredExpenses","filter","expense","date","getFullYear","toString","filteredChangeHandler","eventTragetValue","contentExpenses","color","map","title","amount","id"],"sources":["/Users/adan/Downloads/01-starting-setup/src/components/Expenses/Expense.js"],"sourcesContent":["import { useState } from \"react\";\nimport ExpenseItems from \"../Expenses/ExpenseItems\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\n\nfunction Expense({ expenses }) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filteredExpenses = expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredChangeHandler = (eventTragetValue) => {\n    setFilteredYear(eventTragetValue);\n  };\n\n  let contentExpenses = <p style={{ color: \"#fff\" }}>no expenses found</p>;\n\n  if (filteredExpenses > 0) {\n    contentExpenses = filteredExpenses.map((expense) => (\n      <ExpenseItems\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        key={expense.id}\n      />\n    ));\n  }\n\n  return (\n    <>\n      <Card className='expense'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFiltered={filteredChangeHandler}\n        />\n        {contentExpenses}\n        {/* {filteredExpenses.length === 0 && (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        )}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))} */}\n\n        {/* {filteredExpenses.length === 0 ? (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))\n        )} */}\n\n        {/* {filteredExpenses.map((expense) => (\n          <ExpenseItems\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            key={expense.id}\n          />\n        ))} */}\n      </Card>\n    </>\n  );\n}\n\nexport default Expense;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;;AAEA,SAASC,OAAT,OAA+B;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;EAEA,MAAMQ,gBAAgB,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,OAAD,IAAa;IACpD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CP,YAAjD;EACD,CAFwB,CAAzB;;EAIA,MAAMQ,qBAAqB,GAAIC,gBAAD,IAAsB;IAClDR,eAAe,CAACQ,gBAAD,CAAf;EACD,CAFD;;EAIA,IAAIC,eAAe,gBAAG;IAAG,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAT,CAAV;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAtB;;EAEA,IAAIT,gBAAgB,GAAG,CAAvB,EAA0B;IACxBQ,eAAe,GAAGR,gBAAgB,CAACU,GAAjB,CAAsBR,OAAD,iBACrC,QAAC,YAAD;MACE,KAAK,EAAEA,OAAO,CAACS,KADjB;MAEE,MAAM,EAAET,OAAO,CAACU,MAFlB;MAGE,IAAI,EAAEV,OAAO,CAACC;IAHhB,GAIOD,OAAO,CAACW,EAJf;MAAA;MAAA;MAAA;IAAA,QADgB,CAAlB;EAQD;;EAED,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,SAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAEf,YADZ;QAEE,gBAAgB,EAAEQ;MAFpB;QAAA;QAAA;QAAA;MAAA,QADF,EAKGE,eALH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA6CD;;GArEQZ,O;;KAAAA,O;AAuET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}