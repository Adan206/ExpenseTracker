{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpenseList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expense.js","components/NewExpense/NewExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","children","classes","className","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItems","props","useState","title","setTitle","amount","onClick","ExpenseList","expenses","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFiltered","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expense","filteredYear","setFilteredYear","filteredExpenses","filter","toString","eventTragetValue","NewExpenseForm","enteredTitle","setEnteredTitle","eneteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","enteredFormData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","EnteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPENSE","App","setExpenses","newArrExpense","previousExp","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.559f550f.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card({ children, className }) {\n  const classes = \"card \" + className;\n  return <div className={classes}>{children}</div>;\n}\n\nexport default Card;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate({ date }) {\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__day'>{day}</div>\n      <div className='expense-date__year'>{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import { useState } from \"react\";\nimport \"./ExpenseItems.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"../Expenses/ExpenseDate\";\n\nfunction ExpenseItems(props) {\n  const [title, setTitle] = useState(props.title);\n\n  const onChangeTitle = () => {\n    setTitle(\"UPDATED\");\n  };\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n        <button onClick={onChangeTitle}>Change Title</button>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItems;\n","import React from \"react\";\nimport ExpenseItems from \"./ExpenseItems\";\nimport \"./ExpenseList.css\";\n\nfunction ExpenseList({ expenses }) {\n  if (expenses.length === 0) {\n    return <h2 className='expense-list__fallback'>no expenses found</h2>;\n  }\n\n  return (\n    <ul className='expense-list'>\n      {expenses.map((expense) => (\n        <ExpenseItems\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n          key={expense.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ExpenseList;\n","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nfunction ExpensesFilter(props) {\n  const dropDownChangeHandler = (event) => {\n    props.onChangeFiltered(event.target.value);\n  };\n  return (\n    <div className='expense-filter'>\n      <div className='expense-filter__controls'>\n        <label>Filter by Year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import { useState } from \"react\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"../Expenses/ExpensesChart\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\n\nfunction Expense({ expenses }) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filteredExpenses = expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredChangeHandler = (eventTragetValue) => {\n    setFilteredYear(eventTragetValue);\n  };\n\n  // let contentExpenses = <p style={{ color: \"#fff\" }}>no expenses found</p>;\n\n  // if (filteredExpenses.length > 0) {\n  //   contentExpenses = filteredExpenses.map((expense) => (\n  //     <ExpenseItems\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //       key={expense.id}\n  //     />\n  //   ));\n  // }\n\n  return (\n    <>\n      <Card className='expense'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFiltered={filteredChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpenseList expenses={filteredExpenses} />\n        {/* {filteredExpenses.length === 0 && (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        )}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))} */}\n\n        {/* {filteredExpenses.length === 0 ? (\n          <p style={{ color: \"#fff\" }}>no expenses found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItems\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          ))\n        )} */}\n\n        {/* {filteredExpenses.map((expense) => (\n          <ExpenseItems\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            key={expense.id}\n          />\n        ))} */}\n      </Card>\n    </>\n  );\n}\n\nexport default Expense;\n","import { useState } from \"react\";\nimport \"./NewExpenseForm.css\";\n\nfunction NewExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [eneteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (e) => {\n    setEnteredTitle(e.target.value);\n  };\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n  };\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value);\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n\n    const enteredFormData = {\n      title: enteredTitle,\n      amount: +eneteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(enteredFormData);\n    setEnteredAmount(\"\");\n    setEnteredTitle(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmitForm}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            onChange={amountChangeHandler}\n            value={eneteredAmount}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            onChange={dateChangeHandler}\n            value={enteredDate}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default NewExpenseForm;\n","import \"./NewExpense.css\";\nimport { useState } from \"react\";\nimport NewExpenseForm from \"./NewExpenseForm\";\n\nfunction NewExpense(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const SaveExpenseHandler = (EnteredExpenseData) => {\n    const expenseData = {\n      ...EnteredExpenseData,\n      id: Math.random().toString(),\n    };\n\n    props.onAddExpense(expenseData);\n    // console.log(expenseData);\n    setIsEditing(false);\n  };\n\n  const startIsEditing = () => {\n    setIsEditing(true);\n  };\n  const stopIsEditing = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className='new-expense'>\n      {!isEditing && <button onClick={startIsEditing}>Add New Expense</button>}\n      {isEditing && (\n        <NewExpenseForm\n          onSaveExpenseData={SaveExpenseHandler}\n          onCancel={stopIsEditing}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import Expense from \"./components/Expenses/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSE = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = (newArrExpense) => {\n    setExpenses((previousExp) => {\n      return [newArrExpense, ...previousExp];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}